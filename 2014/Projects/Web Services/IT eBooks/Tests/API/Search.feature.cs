// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace IT_eBooks.Tests.API
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SearchAPIFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Search.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Search API", "In order to develop IT eBooks web site\r\nAs a web developer \r\nI need Rest Api whic" +
                    "h can search for books", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Search API")))
            {
                IT_eBooks.Tests.API.SearchAPIFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Default search")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Search API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApiTest")]
        public virtual void DefaultSearch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Default search", new string[] {
                        "ApiTest"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.When("Search with selenium webdriver query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Title"});
            table1.AddRow(new string[] {
                        "2115300285",
                        "Instant Selenium Testing Tools Starter"});
            table1.AddRow(new string[] {
                        "2205205534",
                        "Selenium 2 Testing Tools"});
            table1.AddRow(new string[] {
                        "583859216",
                        "Selenium 1.0 Testing Tools"});
#line 10
 testRunner.Then("result contains following books", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Search with page number parameter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Search API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApiTest")]
        public virtual void SearchWithPageNumberParameter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search with page number parameter", new string[] {
                        "ApiTest"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.When("Search with mysql query and page number 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Title"});
            table2.AddRow(new string[] {
                        "1470937288",
                        "MySQL for Python"});
            table2.AddRow(new string[] {
                        "573588234",
                        "MySQL 5.1 Plugin Development"});
            table2.AddRow(new string[] {
                        "2144150505",
                        "Understanding MySQL Internals"});
#line 20
 testRunner.Then("result contains following books", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Search with too long query string")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Search API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApiTest")]
        public virtual void SearchWithTooLongQueryString()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search with too long query string", new string[] {
                        "ApiTest"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.When("Search with qwertyuiopasdfghjklzxcvbnmqwertyuiopasdfghjklzxcvbnm query", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then("no results are found", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Search with invalid page number parameter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Search API")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApiTest")]
        public virtual void SearchWithInvalidPageNumberParameter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search with invalid page number parameter", new string[] {
                        "ApiTest"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 35
 testRunner.When("Search with mysql query and page number -1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Title"});
            table3.AddRow(new string[] {
                        "3398759608",
                        "MySQL Stored Procedure Programming"});
            table3.AddRow(new string[] {
                        "924371675",
                        "High Availability MySQL Cookbook"});
            table3.AddRow(new string[] {
                        "1470937288",
                        "MySQL for Python"});
#line 36
 testRunner.Then("result contains following books", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
